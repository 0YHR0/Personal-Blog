(window.webpackJsonp=window.webpackJsonp||[]).push([[262],{660:function(a,t,e){"use strict";e.r(t);var i=e(2),r=Object(i.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"lab-01"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lab-01"}},[a._v("#")]),a._v(" Lab 01")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("unsafe concurrency可以用automic operation来解决，但是代码过长又不能保证，所以用lock")])]),a._v(" "),t("li",[t("p",[a._v("自旋锁可以用在：使用关中断来保证不会发声死锁，因为时间很短")])]),a._v(" "),t("li",[t("p",[a._v("读写自旋锁：分为读锁和写锁")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("读可以多个一起读，但是只有在没有写的时候")])]),a._v(" "),t("li",[t("p",[a._v("写的时候其他进程都被阻塞")])])])]),a._v(" "),t("li",[t("p",[a._v("信号量机制：表示一个资源的剩余个数，等待获取信号量的进程会进入等待队列，但是不会像自旋锁一样占用cpu，因为当有信号量的时候，它会被被动唤醒")])]),a._v(" "),t("li",[t("p",[a._v("mutex是semaphores=1的情况（互斥）")])]),a._v(" "),t("li",[t("p",[a._v("程序top half：把不耗时部分放到top half，不可中断")])]),a._v(" "),t("li",[t("p",[a._v("程序bottom half：可被中断")])]),a._v(" "),t("li",[t("p",[a._v("sequential locks：引入版本号，write的时候会+1，read会一直重试直到开始读的sequential number=结束读的sequential number。适用于有很多reader，没有很多writer的情况")])]),a._v(" "),t("li",[t("p",[a._v("Pre-emption Disabling： pre-emptive抢占式的，可以通过设置关键区不可抢占来实现同步"),t("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/74343c53-e834-4d63-876d-61fa3839a1a6-14899999.jpg",alt:"img"}})])]),a._v(" "),t("li",[t("p",[a._v("read barrier，write barrier，阻止指令重排序的")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("加之前："),t("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/cee5169d-bda6-4f14-8e40-f547105061ac-14899999.jpg",alt:"img"}})])]),a._v(" "),t("li",[t("p",[a._v("加之后："),t("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/0a084d39-d487-4d6d-8058-f956355768af-14899999.jpg",alt:"img"}}),t("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/7fbae135-2ec2-4a57-bd2d-af8546fea763-14899999.jpg",alt:"img"}})])])])]),a._v(" "),t("li",[t("p",[a._v("RCU：读进程不会被阻塞")]),a._v(" "),t("ul",[t("li",[a._v("多用于传递的不是值而是指针的情况：Only works on dynamically allocated data that is referenced via pointers")])])]),a._v(" "),t("li",[t("p",[a._v("summary"),t("img",{attrs:{src:"https://markdown-1301334775.cos.eu-frankfurt.myqcloud.com/42e947b8-b7a8-4ac7-9ef3-02cfd17c010d-14899999.jpg",alt:"img"}})])])])])}),[],!1,null,null,null);t.default=r.exports}}]);