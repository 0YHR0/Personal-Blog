(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{507:function(_,v,t){"use strict";t.r(v);var o=t(2),a=Object(o.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1-mongodb-相关概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-mongodb-相关概念"}},[_._v("#")]),_._v(" 1. MongoDB 相关概念")]),_._v(" "),v("h3",{attrs:{id:"_1-1-业务场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-业务场景"}},[_._v("#")]),_._v(" 1.1 业务场景")]),_._v(" "),v("p",[_._v("传统的关系型数据库 (比如 MySQL), 在数据操作的”三高”需求以及对应的 Web 2.0 网站需求面前, 会有”力不从心”的感觉")]),_._v(" "),v("p",[_._v("所谓的三高需求:")]),_._v(" "),v("p",[v("strong",[_._v("高并发, 高性能, 高可用")]),_._v(", 简称三高")]),_._v(" "),v("ul",[v("li",[_._v("High Performance: 对数据库的高并发读写的要求")]),_._v(" "),v("li",[_._v("High Storage: 对海量数据的高效率存储和访问的需求")]),_._v(" "),v("li",[_._v("High Scalability && High Available: 对数据的高扩展性和高可用性的需求")])]),_._v(" "),v("p",[v("strong",[_._v("而 MongoDB 可以应对三高需求")])]),_._v(" "),v("p",[_._v("具体的应用场景:")]),_._v(" "),v("ul",[v("li",[_._v("社交场景, 使用 MongoDB 存储存储用户信息, 以及用户发表的朋友圈信息, 通过地理位置索引实现附近的人, 地点等功能.")]),_._v(" "),v("li",[_._v("游戏场景, 使用 MongoDB 存储游戏用户信息, 用户的装备, 积分等直接以内嵌文档的形式存储, 方便查询, 高效率存储和访问.")]),_._v(" "),v("li",[_._v("物流场景, 使用 MongoDB 存储订单信息, 订单状态在运送过程中会不断更新, 以 MongoDB 内嵌数组的形式来存储, 一次查询就能将订单所有的变更读取出来.")]),_._v(" "),v("li",[_._v("物联网场景, 使用 MongoDB 存储所有接入的智能设备信息, 以及设备汇报的日志信息, 并对这些信息进行多维度的分析.")]),_._v(" "),v("li",[_._v("视频直播, 使用 MongoDB 存储用户信息, 点赞互动信息等.")])]),_._v(" "),v("p",[_._v("这些应用场景中, 数据操作方面的共同点有:")]),_._v(" "),v("ol",[v("li",[_._v("数据量大")]),_._v(" "),v("li",[_._v("写入操作频繁")]),_._v(" "),v("li",[_._v("价值较低的数据, 对"),v("strong",[_._v("事务性")]),_._v("要求不高")])]),_._v(" "),v("p",[_._v("对于这样的数据, 更适合用 MongoDB 来实现数据存储")]),_._v(" "),v("p",[_._v("那么我们"),v("strong",[_._v("什么时候选择 MongoDB 呢?")])]),_._v(" "),v("p",[_._v("除了架构选型上, 除了上述三个特点之外, 还要考虑下面这些问题:")]),_._v(" "),v("ul",[v("li",[_._v("应用不需要事务及复杂 JOIN 支持")]),_._v(" "),v("li",[_._v("新应用, 需求会变, 数据模型无法确定, 想快速迭代开发")]),_._v(" "),v("li",[_._v("应用需要 2000 - 3000 以上的读写QPS（更高也可以）")]),_._v(" "),v("li",[_._v("应用需要 TB 甚至 PB 级别数据存储")]),_._v(" "),v("li",[_._v("应用发展迅速, 需要能快速水平扩展")]),_._v(" "),v("li",[_._v("应用要求存储的数据不丢失")]),_._v(" "),v("li",[_._v("应用需要 "),v("code",[_._v("99.999%")]),_._v(" 高可用")]),_._v(" "),v("li",[_._v("应用需要大量的地理位置查询, 文本查询")])]),_._v(" "),v("p",[_._v("如果上述有1个符合, 可以考虑 MongoDB, 2个及以上的符合, 选择 MongoDB 绝不会后悔.")]),_._v(" "),v("blockquote",[v("p",[_._v("如果用MySQL呢?")]),_._v(" "),v("p",[_._v("相对MySQL, 可以以更低的成本解决问题（包括学习, 开发, 运维等成本）")])]),_._v(" "),v("h3",{attrs:{id:"_1-2-mongodb-简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-mongodb-简介"}},[_._v("#")]),_._v(" 1.2 MongoDB 简介")]),_._v(" "),v("blockquote",[v("p",[_._v("MongoDB是一个开源, 高性能, 无模式的文档型数据库, 当初的设计就是用于简化开发和方便扩展, 是NoSQL数据库产品中的一种.是最 像关系型数据库（MySQL）的非关系型数据库. 它支持的数据结构非常松散, 是一种类似于 JSON 的 格式叫BSON, 所以它既可以存储比较复杂的数据类型, 又相当的灵活. MongoDB中的记录是一个文档, 它是一个由字段和值对（ﬁeld:value）组成的数据结构.MongoDB文档类似于JSON对象, 即一个文档认 为就是一个对象.字段的数据类型是字符型, 它的值除了使用基本的一些类型外, 还可以包括其他文档, 普通数组和文档数组.")])]),_._v(" "),v("p",[v("strong",[_._v("“最像关系型数据库的 NoSQL 数据库”")]),_._v(". MongoDB 中的记录是一个文档, 是一个 key-value pair. 字段的数据类型是字符型, 值除了使用基本的一些类型以外, 还包括其它文档, 普通数组以及文档数组")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://markdown-1301334775.cos.eu-frankfurt.myqcloud.com/maxresdefault.jpg",alt:"img"}})]),_._v(" "),v("p",[v("img",{attrs:{src:"https://markdown-1301334775.cos.eu-frankfurt.myqcloud.com/image-20200505220556737.png",alt:"img"}})]),_._v(" "),v("p",[_._v("MongoDB 数据模型是面向文档的, 所谓文档就是一种类似于 JSON 的结构, 简单理解 MongoDB 这个数据库中存在的是各种各样的 JSON（BSON）")]),_._v(" "),v("ul",[v("li",[_._v("数据库 (database)\n"),v("ul",[v("li",[_._v("数据库是一个仓库, 存储集合 (collection)")])])]),_._v(" "),v("li",[_._v("集合 (collection)\n"),v("ul",[v("li",[_._v("类似于数组, 在集合中存放文档")])])]),_._v(" "),v("li",[_._v("文档 (document)\n"),v("ul",[v("li",[_._v("文档型数据库的最小单位, 通常情况, 我们存储和操作的内容都是文档")])])])]),_._v(" "),v("p",[_._v("在 MongoDB 中, 数据库和集合都不需要手动创建, 当我们创建文档时, 如果文档所在的集合或者数据库不存在, "),v("strong",[_._v("则会自动创建数据库或者集合")])]),_._v(" "),v("h3",{attrs:{id:"数据库-databases-管理语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库-databases-管理语法"}},[_._v("#")]),_._v(" 数据库 (databases) 管理语法")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("语法")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("查看所有数据库")]),_._v(" "),v("td",[v("code",[_._v("show dbs;")]),_._v(" 或 "),v("code",[_._v("show databases;")])])]),_._v(" "),v("tr",[v("td",[_._v("查看当前数据库")]),_._v(" "),v("td",[v("code",[_._v("db;")])])]),_._v(" "),v("tr",[v("td",[_._v("切换到某数据库 ("),v("strong",[_._v("若数据库不存在则创建数据库")]),_._v(")")]),_._v(" "),v("td",[v("code",[_._v("use <db_name>;")])])]),_._v(" "),v("tr",[v("td",[_._v("删除当前数据库")]),_._v(" "),v("td",[v("code",[_._v("db.dropDatabase();")])])])])]),_._v(" "),v("h3",{attrs:{id:"集合-collection-管理语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#集合-collection-管理语法"}},[_._v("#")]),_._v(" 集合 (collection) 管理语法")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("操作")]),_._v(" "),v("th",[_._v("语法")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("查看所有集合")]),_._v(" "),v("td",[v("code",[_._v("show collections;")])])]),_._v(" "),v("tr",[v("td",[_._v("创建集合")]),_._v(" "),v("td",[v("code",[_._v('db.createCollection("<collection_name>");')])])]),_._v(" "),v("tr",[v("td",[_._v("删除集合")]),_._v(" "),v("td",[v("code",[_._v("db.<collection_name>.drop()")])])])])]),_._v(" "),v("h3",{attrs:{id:"_1-3-数据模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-数据模型"}},[_._v("#")]),_._v(" 1.3. 数据模型")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Zhenye-Na/img-hosting-picgo/master/img/image-20200505220650827.png",alt:"img"}})]),_._v(" "),v("h3",{attrs:{id:"_1-4-mongodb-的特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-mongodb-的特点"}},[_._v("#")]),_._v(" 1.4 MongoDB 的特点")]),_._v(" "),v("h4",{attrs:{id:"_1-4-1-高性能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-高性能"}},[_._v("#")]),_._v(" 1.4.1 高性能")]),_._v(" "),v("p",[_._v("MongoDB 提供高性能的数据持久化")]),_._v(" "),v("ul",[v("li",[_._v("嵌入式数据模型的支持减少了数据库系统上的 I/O 活动")]),_._v(" "),v("li",[_._v("索引支持更快的查询, 并且可以包含来自嵌入式文档和数组的键 (文本索引解决搜索的需求, TTL 索引解决历史数据自动过期的需求, 地理位置索引可以用于构件各种 O2O 应用)")]),_._v(" "),v("li",[_._v("mmapv1, wiredtiger, mongorocks (rocksdb) in-memory 等多引擎支持满足各种场景需求")]),_._v(" "),v("li",[_._v("Gridfs 解决文件存储需求")])]),_._v(" "),v("h4",{attrs:{id:"_1-4-2-高可用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-高可用"}},[_._v("#")]),_._v(" 1.4.2 高可用")]),_._v(" "),v("p",[_._v("MongoDB 的复制工具称作"),v("strong",[_._v("副本集")]),_._v(" (replica set) 可以提供自动故障转移和数据冗余")]),_._v(" "),v("h4",{attrs:{id:"_1-4-3-高扩展"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-3-高扩展"}},[_._v("#")]),_._v(" 1.4.3 高扩展")]),_._v(" "),v("p",[_._v("水平扩展是其核心功能一部分")]),_._v(" "),v("p",[_._v("分片将数据分布在一组集群的机器上 (海量数据存储, 服务能力水平扩展)")]),_._v(" "),v("p",[_._v("MongoDB 支持基于"),v("strong",[_._v("片键")]),_._v("创建数据区域, 在一个平衡的集群当中, MongoDB 将一个区域所覆盖的读写"),v("strong",[_._v("只定向")]),_._v("到该区域的那些片")]),_._v(" "),v("h4",{attrs:{id:"_1-4-4-其他"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-其他"}},[_._v("#")]),_._v(" 1.4.4 其他")]),_._v(" "),v("p",[_._v("MongoDB支持丰富的查询语言, 支持读和写操作(CRUD), 比如数据聚合, 文本搜索和地理空间查询等. 无模式（动态模式）, 灵活的文档模型")]),_._v(" "),v("p",[v("strong",[_._v("Shell 是Js 语法")])])])}),[],!1,null,null,null);v.default=a.exports}}]);