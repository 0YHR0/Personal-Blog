(window.webpackJsonp=window.webpackJsonp||[]).push([[376],{773:function(e,a,t){"use strict";t.r(a);var i=t(2),p=Object(i.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"安装环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装环境"}},[e._v("#")]),e._v(" 安装环境")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("用Vmware起三台虚拟机，并安装sun的jdk")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("注意：系统自带的OpenJDK 只包含最精简的jdk源码，平时我们在windows上开发的一般都是用sun的JDK，所以要卸载重装")])]),e._v(" "),a("li",[a("p",[e._v("在官网下载要的jdk版本rpm包https://www.oracle.com/java/technologies/downloads/#java8")])]),e._v(" "),a("li",[a("p",[e._v("卸载自带的OpenJDK：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("查看安装了哪些jdk：rpm -qa |grep java")])]),e._v(" "),a("li",[a("p",[e._v("进入root: su")])]),e._v(" "),a("li",[a("p",[e._v("卸载所有带openJDK的包：rpm -e --nodeps xx(xx是带Openjdk的包名)")])]),e._v(" "),a("li",[a("p",[e._v("从本机使用ftp（如Xshell）上传下载的jdk源码，一般上传到Download文件夹")])]),e._v(" "),a("li",[a("p",[e._v("进入Download文件夹，并安装jdk：rpm -ivh xx（xx是文件名）")])]),e._v(" "),a("li",[a("p",[e._v("使用java --version查看是否安装成功"),a("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/5dd01949-3794-4a8f-a6e9-5f2ffa4fa902-14899999.jpg",alt:"img"}})])])])])])]),e._v(" "),a("li",[a("p",[e._v("安装zookeeper：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("在/opt下创建一个文件夹module，把zookeeper安装包放到其中")])]),e._v(" "),a("li",[a("p",[e._v("在/opt下创建一个文件夹install，用来安装软件")])]),e._v(" "),a("li",[a("p",[e._v("在module中运行：tar -zxvf apache-zookeeper-3.5.7-bin.tar.gz -C /opt/install 表示把zookeeper安装到install目录下")])]),e._v(" "),a("li",[a("p",[e._v("在/opt/install目录下把zookeeper改个名字：mv apache-zookeeper-3.5.7-bin/ zookeeper-3.5.7")])]),e._v(" "),a("li",[a("p",[e._v("在安装路径下的conf中找到zoo-sample.cfg，这是zookeeper配置文件，并修改名字为zoo.cfg")])]),e._v(" "),a("li",[a("p",[e._v("打开zoo.cfg"),a("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/f50a5658-b72b-452c-8ad3-fc2f8a275dbf-14899999.jpg",alt:"img"}})])]),e._v(" "),a("li",[a("p",[e._v("dataDir不能放在temp中，因为linux系统中定期会对临时数据清理，一般在安装路径下新建一个文件夹zkData用来存放数据，并把它更新到配置文件中")])])])]),e._v(" "),a("li",[a("p",[e._v("启动zookeeper：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("先启动服务端：bin/zkServer.sh start")])]),e._v(" "),a("li",[a("p",[e._v("可以用jps -l 进行进程访问，看看启动成功了没有")])]),e._v(" "),a("li",[a("p",[e._v("再启动客户端进行访问：bin/zkCli.sh、")])]),e._v(" "),a("li",[a("p",[e._v("查看zookeeper的状态：bin/zkServer.sh status")])]),e._v(" "),a("li",[a("p",[e._v("关闭zookeeper服务：bin/zkServer.sh stop")])])])]),e._v(" "),a("li",[a("p",[e._v("配置参数：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("zoo.cfg中的参数：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("tickTime: 2000     【通信心跳时间，单位是毫秒】"),a("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/2ac3731d-e831-4ca3-a30d-f2419e0f304a-14899999.jpg",alt:"img"}})])]),e._v(" "),a("li",[a("p",[e._v("initLimit=10    【 LF初始通信的时限，如果在建立通信时10次心跳后还没有反应，则判断对方挂了】"),a("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/bef4c97e-2397-4ff4-835f-62d2cad2e8c1-14899999.jpg",alt:"img"}})])]),e._v(" "),a("li",[a("p",[e._v("syncLimit=5 【LF同步通信时限】"),a("img",{attrs:{src:"https://api2.mubu.com/v3/document_image/ed6a5d59-87f2-4888-b733-fe3a4a8eaae6-14899999.jpg",alt:"img"}})])]),e._v(" "),a("li",[a("p",[e._v("dataDir【保存Zookeeper中的数据】")])]),e._v(" "),a("li",[a("p",[e._v("clientPort = 2181【客户端连接端口，通常不做修改】")])])])])])])]),e._v(" "),a("h1",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")])])])}),[],!1,null,null,null);a.default=p.exports}}]);